------------------
2024/12/11
- Tried v0_1 with this with chatgpt and was starting to make it dizzy
- Tried v0_2 with perplexity and it nailed it
 - simple version working successfully
 - continue with the perplexity thread 
- Added type_effectiveness dictionary

## Now work on:
# Printing out whether super effective, not very effective
# PP
# Effects
# Simplified? damage calc - what are we missing?
"""
Note that this is a simplified version and doesn't include all Pok√©mon battle mechanics 
 (such as status effects, critical hits, or move PP). 
 You can expand on this base to add more complex mechanics as needed.
"""

------------------
2024/12/09
- Scraped indiv moves of each pokemon.
 - grabbed all moves, not the moves of the orig generation
 - 2 final output dicts: with clean name and with orig name

------------------
2024/12/06

- On to scraping the individual moves of each Pokemon...
 -- pokemon_db_scrape.ipynb at the bottom has the strategy we should try in bulk:
1. Go through each Pokemon from pokemon_main_stats.csv (need to look into dupes like charizard y etc.)
2. Grab the first gen that pokemon appeared in (see last scrape)
3. Loop through each url for that pokemon appended to their first url
 - e.g. https://pokemondb.net/pokedex/bulbasaur/moves/1
 -      https://pokemondb.net/pokedex/inteleon/moves/8
4. Scrape that move list (their original moves)
 - see scraping method above 3.
 - also need to unique this list? Might have dupes (e.g. red/blue + yellow are all gen 1 but have two separate tabs)
5. Link that together with pokemon_moves_data.csv during the pick_em to get all the move stats for the randomly selected move for that turn


------------------
2024/11/26

- Mods 2&3 have been reviewed for clarity/engagment and now have exercises for comprehension


------------------
2024/11/26

- Mod 1 has been reviewed for clarity/engagment and now has exercises for comprehension


------------------
2024/11/25

- Mod 3 complete
- Review all mods and then add exercises for comprehension
- Then build final game/playground 
 - see notes from 11/22


------------------
2024/11/22

- Modules 1 (basics, math, vars, data types) and 2 (loops, conditionals, load in a file (and display an image)) are finished (first runthrough)
 - add some exercises at the end of each mini-module for comprehension

- Build Mod 3 (functions)

- Build final game/playground (template?)
 - some open-ended, lots of room for personal building type game
 - look into visuals/images?
  - load an image file in python?